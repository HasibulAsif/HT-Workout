import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import { toast } from "sonner";

export interface WorkoutMetrics {
  bmi: number;
  bodyFat: number;
  calorieNeeds: number;
  fitnessLevel: string;
}

export const generateWorkoutPDF = (metrics: WorkoutMetrics, routines: any[], schedule: any[]) => {
  try {
    const doc = new jsPDF();
    
    // Header
    doc.setFontSize(20);
    doc.setTextColor(40, 40, 40);
    doc.text('Your Personalized Workout Plan', 20, 20);
    
    // Metrics Section
    doc.setFontSize(16);
    doc.text('Your Fitness Metrics', 20, 40);
    doc.setFontSize(12);
    doc.text(`BMI: ${metrics.bmi}`, 20, 50);
    doc.text(`Body Fat: ${metrics.bodyFat}%`, 20, 60);
    doc.text(`Daily Calorie Needs: ${metrics.calorieNeeds} kcal`, 20, 70);
    doc.text(`Fitness Level: ${metrics.fitnessLevel}`, 20, 80);
    
    // Routines Section
    doc.setFontSize(16);
    doc.text('Recommended Routines', 20, 100);
    doc.setFontSize(12);
    routines.forEach((routine, index) => {
      const yPos = 110 + (index * 10);
      doc.text(`${routine.name}: ${routine.description}`, 20, yPos);
    });
    
    // Weekly Schedule
    doc.setFontSize(16);
    doc.text('Weekly Schedule', 20, 160);
    doc.setFontSize(12);
    schedule.forEach((day, index) => {
      const yPos = 170 + (index * 10);
      doc.text(`${day.name}: ${day.workout}`, 20, yPos);
    });
    
    // Footer
    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100);
    doc.text('Generated by FitTrack - Your Personal Fitness Assistant', 20, 280);
    
    doc.save('workout-plan.pdf');
    toast.success("Workout plan downloaded successfully!");
  } catch (error) {
    toast.error("Failed to generate workout plan PDF");
    console.error(error);
  }
};